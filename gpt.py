from utils.imports import *
from utils.func import *
from g4f.client import Client as GPTClient

#meta name: AI
#meta description: –õ–µ–≥–∫–∏–π –∫–∞—Ä–º–∞–Ω–Ω—ã–π AI –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –≤–∞—à–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏!
#meta developer: @lscmods
#meta img: https://research.aimultiple.com/wp-content/uploads/2023/03/chatgpt.webp
#meta libs: g4f

gpt_client = GPTClient()

GPT_PROMPT = "\n" #—Ç—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–ª—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ GPT

def generate_gpt_response(query):
    try:
        response = gpt_client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": GPT_PROMPT + query}],
            web_search=False
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

@app.on_message(filters.command(["gpt"], prefixes=prefix) & filters.user(allow))
async def gpt_command(client, message):
    if len(message.text.split()) < 2:
        await message.edit(f"[‚ùóÔ∏è] <b>–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ</b> <code>{prefix}gpt</code>\n<blockquote><b>–ü—Ä–∏–º–µ—Ä: <code>{prefix}gpt –∫–∞–∫ –¥–µ–ª–∞?</code></b></blockquote>")
        return

    user_query = message.text[4:].strip()
    await message.edit("<b>[üß†] <i>–î—É–º–∞—é</i>...</b>")

    reply = generate_gpt_response(user_query)
    await message.edit(f"[‚úèÔ∏è] –í–∞—à –∑–∞–ø—Ä–æ—Å: <code>{user_query}</code>\n\n[ü§ñ] –û—Ç–≤–µ—Ç: <b>{reply[:4096]}</b>")

modules_help['AI'] = {
  "gpt": "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
}